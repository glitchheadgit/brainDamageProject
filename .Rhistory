data <- data %>%
mutate(fiveday_log = if_else(row_number() <= 173,
fiveday_log * coeff2,
fiveday_log))
data
###### 8ohg
data <- data %>%
mutate(
`8ohdg 1d log` = if_else(`8ohdg на миллион оснований 1d` > 0, log(`8ohdg на миллион оснований 1d`), NA_real_),
`8ohdg 5d log` = if_else(`8ohdg на миллион оснований 5d` > 0, log(`8ohdg на миллион оснований 5d`), NA_real_)
)
data1 <- data %>% slice(1:173)
data2 <- data %>% slice(220:522)
mean1_ohdg1 <- mean(data1$`8ohdg 1d log`, na.rm = TRUE)
mean2_ohdg1 <- mean(data2$`8ohdg 1d log`, na.rm = TRUE)
coeff_ohdg1 <- mean2_ohdg1 / mean1_ohdg1
data <- data %>%
mutate(`8ohdg на миллион оснований 1d лог` = if_else(row_number() <= 173,
`8ohdg 1d log` * coeff_ohdg1,
`8ohdg 1d log`))
mean1_ohdg5 <- mean(data1$`8ohdg 5d log`, na.rm = TRUE)
mean2_ohdg5 <- mean(data2$`8ohdg 5d log`, na.rm = TRUE)
coeff_ohdg5 <- mean2_ohdg5 / mean1_ohdg5
data <- data %>%
mutate(`8ohdg 5d лог` = if_else(row_number() <= 173,
`8ohdg 5d log` * coeff_ohdg5,
`8ohdg 5d log`))
data
data_e <- data
data_e <- data_e %>% rename ("Num" = "№ истории", "Part" = "Часть", "Sex" = "Пол", "Num_ref" = "Номер Настя", "Age" = "Возраст", "HTR1A_rs6295" = "HTR1A  rs6295","AQP4_rs1058427"  = "AQP4 rs1058427", "BDNF_rs6265" = "BDNF rs6265", "OLR1_rs11053646" = "OLR1 rs11053646", "NRF2_rs6726395" = "NRF2 rs6726395", "AGTR1_rs275651" = "AGTR1  rs275651",  "AQP5_rs3759129" = "AQP5 rs3759129", "TLR9_rs352162" = "TLR9 rs352162", "TLR9_rs187084" = "TLR 9 rs187084", "AQP5_rs3736309" = "AQP rs3736309",  "anti-HCV" = "анти HCV 2-нд, 1 - да, 0 - нет", "Hbs_AG" = "Hbs AG 0-не,2-нд, 1 - да", "LMCA" = "ЛСМА", "Date_brain_damage" = "Дата мозговой катастрофы" , "Main_diagnosis_code" = "Основной диагноз код МКБ10", "Diagnosis" = "Диагноз целиком", "Transfer_date_FSCCRR" = "Дата перевода в ФНКРР", "Pneumonia" = "Поступил в ФНКЦ с пневмонией", "Infection"  = "Поступил в ФКНЦ с инфекцией", "T_admission"  = "t° при поступлении", "CGS" = "CGS, балл", "CCI_1d"  = "Индекс коморбидности Чарлсона (баллы) 1d",  "CCI_5d" = "Индекс коморбидности Чарлсона (баллы) 5d",
"CCI_21d" = "Индекс коморбидности Чарлсона (баллы) 21d",
"CCI_out" = "Индекс коморбидности Чарлсона (баллы)  out",
"CIRS-G_sum_1d"  = "CIRS-G сумма, 1d",
"CIRS-G_pathology_1d" = "CIRS-G систем с паталогиями, 1d" ,
"CIRS-G_severity_1d" = "CIRS-G индекс тяжести, 1d",
"CIRS-G_sum_5d_35"  = "CIRS-G сумма, 5d...35",
"CIRS-G_pathology_5d_36"= "CIRS-G систем с паталогиями, 5d...36",
"CIRS-G_severity_5d_37" = "CIRS-G индекс тяжести, 5d...37",
"CIRS-G_sum_5d_38" = "CIRS-G сумма, 5d...38",
"CIRS-G_pathology__5d_39"  = "CIRS-G систем с паталогиями, 5d...39",
"CIRS-G_severity_5d_40" = "CIRS-G индекс тяжести, 5d...40",
"CIRS-G_sum_out" = "CIRS-G сумма, out",
"CIRS-G_pathology_out" = "CIRS-G систем с паталогиями, out",
"CIRS-G_severity_out" = "CIRS-G индекс тяжести, out",
"exDNA_1d" = "внкДНК, нг/мл 1d",
"8ohdg_1d" = "8ohdg на миллион оснований 1d",
"exDNA_5d" = "внкДНК, нг/мл 5d",
"8ohdg_5d" = "8ohdg на миллион оснований 5d",
"Uroseptic_infection" = "Уросептическая инфекция в любой момент времени",
"Sepsis/septic_shock" = "Сепсис/септический шок в любой момент времни",
"Ventilation" = "Потребность в ИВЛ за время госпитализации в любой момент времени",
"Ухудшение пневмонии_сутки" = "Ухудшение исходной пневмонии, сутки",
"Ventilation_d" = "ИВЛ (дни)",
"Discharge_date_FSCCRR" = "Дата выписки из ФНКЦ РР",
"ICU_FSCCRR_d" = "Дней в ОРИТ ФНКЦ РР",
"FSCCRR_bed-days" = "Койко-дней в ФНКЦ РР",
"Outcome" = "Исход, 0 -выписан, 1 умер, 2 - цензура",
"Pneumonia_at_FSCCRR" = "Пневмония возникшая в ФНКЦ РР",
"Pneumonia_deterioration_d" = "Ухудшение исходной пневмонии, сутки") %>%
rename_with(~ gsub("Лактат","Lactate", .x)) %>%
rename_with(~ gsub("Креатинин","Creatinine", .x)) %>%
rename_with(~ gsub("АЛТ","ALT", .x)) %>%
rename_with(~ gsub("АСТ","AST", .x)) %>%
rename_with(~ gsub("Альбумин","Albumin", .x)) %>%
rename_with(~ gsub("Щелочная фосфотаза","Alcaline_phosphatase", .x)) %>%
rename_with(~ gsub("Мочевая кислота","Uric_acid", .x)) %>%
rename_with(~ gsub("Мочевина","Urea", .x)) %>%
rename_with(~ gsub("ГГТ","GGT", .x)) %>%
rename_with(~ gsub("Натрий","Sodium", .x)) %>%
rename_with(~ gsub("Калий","Potassium", .x)) %>%
rename_with(~ gsub("Хлорид","Chloride", .x)) %>%
rename_with(~ gsub("АЧТВ","APTT", .x)) %>%
rename_with(~ gsub("МНО","INR", .x)) %>%
rename_with(~ gsub("Фибриноген","Fibrinogen", .x)) %>%
rename_with(~ gsub("ПВ","PT", .x)) %>%
rename_at(vars(44 : 148), ~str_replace_all(., "\\s+", "_"))  %>%
mutate(across(`Age`, as.integer))
# delete initial dna- variables
data_e <- data_e[ ,-c(52, 54, 163, 164)]
colnames(data_e)
data_e <- data_e %>% mutate (`Before_FSCCRR_d` = as.Date(data_e$`Transfer_date_FSCCRR` , format="%d-%m-%Y")- as.Date(data_e$`Date_brain_damage`, format="%d-%m-%Y"))%>%
mutate(`Ventilation` = ifelse(`Ventilation` =="н/д", NA, `Ventilation`), `Outcome` = ifelse( `Outcome` == 2, NA, `Outcome`),
`Sex` = case_when(`Sex` %in% c('ж', 'Ж') ~ 'F', `Sex`  %in% c('м', 'М') ~ 'M', .default = `Sex`),
`Pneumonia` = case_when(`Pneumonia` == 1 ~ "Yes", `Pneumonia` == 0 ~ "No", TRUE ~ NA),
`Infection` = case_when(grepl("1",`Infection` ) ~ "Yes", `Infection` == 0 ~ "No", TRUE ~ NA),
`Sepsis/septic_shock` = case_when(grepl("1",`Sepsis/septic_shock` ) ~ "Yes", `Sepsis/septic_shock` == 0 ~ "No", TRUE ~ NA),
`Pneumonia_at_FSCCRR` = case_when(grepl("1",`Pneumonia_at_FSCCRR` ) ~ "Yes", `Pneumonia_at_FSCCRR` == 0 ~ "No", TRUE ~ NA),
`Hbs_AG`= case_when(`Hbs_AG` == 1 ~ "Yes", `Hbs_AG` == 0 ~ "No", TRUE ~ NA),
`Ventilation`= case_when(`Ventilation` == 1 ~ "Yes", `Ventilation` == 0 ~ "No", TRUE ~ NA)) %>%
mutate (`NLR_1d` = as.numeric(`NEU_#_1d`) / as.numeric(`LYM_#_1d`))
hospital_polymorf_e <- data_e %>%  mutate (`HTR1A_rs6295` = ifelse (`HTR1A_rs6295` == 'С/С', 'C/C', `HTR1A_rs6295`),
`AQP4_rs1058427` = ifelse (`AQP4_rs1058427` == 'C/A'| `AQP4_rs1058427` == 'С/A', 'C/A', `AQP4_rs1058427`),
`OLR1_rs11053646` = ifelse (`OLR1_rs11053646` == 'C/G', 'G/C', `OLR1_rs11053646`),
`AQP5_rs3759129` = ifelse (`AQP5_rs3759129` == 'С/C', 'C/C',`AQP5_rs3759129`),
`TLR9_rs352162` = case_when(`TLR9_rs352162` == 'С/С' | `TLR9_rs352162` == 'С/C' ~ 'C/C',
`TLR9_rs352162` == 'С/T' ~ 'C/T',
.default = `TLR9_rs352162` ),
`TLR9_rs187084` = case_when(`TLR9_rs187084` == 'C/T' | `TLR9_rs187084` == 'С/T' ~ 'C/T',
.default = `TLR9_rs187084` ),
`AQP5_rs3736309` = case_when(`AQP5_rs3736309` == 'C/T' | `AQP5_rs3736309` == 'С/T' ~ 'C/T',
.default = `AQP5_rs3736309` ))  %>%
dplyr::select(ID, HTR1A_rs6295, AQP4_rs1058427, BDNF_rs6265, OLR1_rs11053646, NRF2_rs6726395, AGTR1_rs275651, AQP5_rs3759129, TLR9_rs352162, TLR9_rs187084, AQP5_rs3736309, `Ventilation`, `Outcome`, `oneday_log`, `8ohdg 1d log`, `NLR_1d`, `FSCCRR_bed-days` ) %>%
mutate (across(c(HTR1A_rs6295, AQP4_rs1058427, BDNF_rs6265, OLR1_rs11053646, NRF2_rs6726395, AGTR1_rs275651, AQP5_rs3759129, TLR9_rs352162, TLR9_rs187084, AQP5_rs3736309), factor), across(`FSCCRR_bed-days`, as.numeric)) %>% mutate (BD_group = case_when (`FSCCRR_bed-days` < 30 ~ "0-30",
30 <= `FSCCRR_bed-days` & `FSCCRR_bed-days` < 46 ~ "30-46",
46 <= `FSCCRR_bed-days` & `FSCCRR_bed-days` < 67 ~ "46-67",
67 < `FSCCRR_bed-days` ~ "67-401")) %>% rename ("beddays" = "FSCCRR_bed-days")
hospital_polymorf_long <- hospital_polymorf_e %>%
dplyr::select (ID, `HTR1A_rs6295`, `AQP4_rs1058427`, `BDNF_rs6265`, `OLR1_rs11053646`, `NRF2_rs6726395`, `AGTR1_rs275651`, `AQP5_rs3759129`, `TLR9_rs352162`, `TLR9_rs187084`, `AQP5_rs3736309`) %>%
pivot_longer(!ID, names_to = "Position", values_to = "SNP")
theme_cust <- theme(
axis.text.x = element_text(size = 14, face = 'bold'),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
plot.title = element_text(hjust=0.5),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
panel.background = element_rect(fill = "white", color = 'black'),
plot.background = element_rect(fill = "white"),
#panel.grid.major = element_line(color = "gray90"),
#panel.grid.minor = element_line(color = "lightgray"),
strip.text = element_text(size = 14)
)
ggplot (hospital_polymorf_long) +
geom_bar (aes(SNP, fill = SNP)) +
facet_wrap (~Position, nrow = 5, axes = "all", axis.labels = "all_x") +
theme_base() +
scale_fill_brewer(palette = "RdYlGn") +
theme_cust +
labs (title = ' SNP distribution')
library(SNPassoc)
# specify columns contain SNP
polymorf.s <- setupSNP (data=hospital_polymorf_e %>% filter(Outcome == "0"), colSNPs=2:11, sep="/")
# got new class snp
head(polymorf.s$TLR9_rs352162)
summary(polymorf.s$TLR9_rs352162)
# which shows the genotype and allele frequencies for a given SNP, testing for Hardy-Weinberg equilibrium (HWE).
#We can  visualize the results in a plot by
plot(polymorf.s$TLR9_rs352162)
plot(polymorf.s$TLR9_rs352162, type=pie)
# results across all snp
#prepare flextable (summary can't be converted directly)
cbind(colnames(polymorf.s)[7:16] %>% enframe(), summary(polymorf.s, print=FALSE)) %>%
rename ("ID"= "name", "SNP" = "value") %>%
mutate(across(where(is.numeric), round, digits = 2)) %>%
flextable()
plotMissing(polymorf.s, print.labels.SNPs = FALSE)
hwe <- tableHWE(polymorf.s)
hwe
hwe3 <- tableHWE(polymorf.s, `Ventilation`)
#prepare flextable
cbind (colnames(polymorf.s)[7:16] %>% enframe(), hwe3 %>% as_tibble()) %>%
rename ("ID"= "name", "SNP" = "value") %>%
mutate(across(where(is.numeric), round, digits = 2)) %>%
flextable()
#SNPs is HWE in the whole sample but not controls
snpNHWE <- hwe3[,1]>0.05 & hwe3[,2]<0.05
rownames(hwe3)[snpNHWE]
#SNPs that do not pass the HWE test must be removed form further analyses. We can recall setupSNP and indicate the columns of the SNPs to be kept
#snps.ok <- rownames(hwe2)[hwe2[,2]>=0.001]
#pos <- which(colnames(hospital_polymorf_e)%in%snps.ok, useNames = FALSE)
#polymorph.s <- setupSNP(hospital_polymorf_e, pos, sep="/")
association(`Ventilation` ~ TLR9_rs352162, data= polymorf.s)
ans <- WGassociation(`beddays`, data=polymorf.s)
ans
plot(ans) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 20, vjust = 0.5, hjust=1))
association(`NLR_1d` ~ `AQP4_rs1058427` , data= polymorf.s)
ans_nlr <- WGassociation(`NLR_1d`, data=polymorf.s)
ans_nlr
plot(ans_nlr)
polymorf.s$beddays <- as.numeric(polymorf.s$beddays)
ans_dna <- WGassociation(, data=polymorf.s)
data_e <- data_e %>% mutate(
`Main_diagnosis_code` = case_when(
`Main_diagnosis_code` == "I 69.1" ~ "I69.1",
`Main_diagnosis_code` == "I 69.3" ~ "I69.3",
`Main_diagnosis_code` == "G.93.1" ~ "G93.1",
`Main_diagnosis_code` == "I.69." ~ "I69",
`Main_diagnosis_code` == "I.69.3" ~ "I69.3",
`Main_diagnosis_code` == "Т.94." ~ "Т94",
`Main_diagnosis_code` == "I 69.0" ~ "I69.0",
`Main_diagnosis_code` == "Т90." ~ "Т90",
`Main_diagnosis_code` == "I.21.4" ~ "I21.4",
`Main_diagnosis_code` == "I.69.1" ~ "I69.1",
`Main_diagnosis_code` == "Т 90.5" ~ "Т90.5",
`Main_diagnosis_code` == "D33.0 D" ~ "D33.0",
`Main_diagnosis_code` == "M86.1 О" ~ "M86.1",
`Main_diagnosis_code` == "G93.1 G" ~ "G93.1",
`Main_diagnosis_code` == "67.9 Це" ~ "I67.9",
`Main_diagnosis_code` == "G93.1 А" ~ "G93.1",
`Main_diagnosis_code` == "G09 ос" ~ "G09",
`Main_diagnosis_code` == "I69.0 1" ~ "I69.0",
`Main_diagnosis_code` == "G. 93.1" ~ "G93.1",
`Main_diagnosis_code` == "26" ~ "I69.3",              #!!!!
`Main_diagnosis_code` == "G93..4" ~ "G93.4",
`Main_diagnosis_code` == "169.3"	~ "I69.3",
`Main_diagnosis_code` == "169.1"	~ "I69.1",
`Main_diagnosis_code` == "160.0"	~ "I60.0",
`Main_diagnosis_code` == "169.4" ~ "I69.4",
`Main_diagnosis_code` == "T90,5" ~ "T90.5",
`Main_diagnosis_code` == "T.94.0" ~ "T94.0",
TRUE ~ `Main_diagnosis_code`
),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, "С", "C"),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, "Т", "T"),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, ";", ""),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, ", ", ";"),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, "    ", " "),
`Main_diagnosis_code` = str_replace_all(`Main_diagnosis_code`, " ", ";"),
)
data_e %>% summarise(
diseaseGroup = case_when(
`Main_diagnosis_code` %in% c("I63", "I69.3", "I69.4", "T82.8") ~ "Ишемический инсульт",
`Main_diagnosis_code` %in% c("Q28", "I60", "I72", "I69.2", "I69.1", "I69.0", "I61") ~ "Геморрагический инсульт",
`Main_diagnosis_code` %in% c("S06", "T94", "T94") ~ "Последствие ЧМТ",
`Main_diagnosis_code` %in% c("G93.4", "G93.1", "G94.3", "I46", "U07.1", "U09.9", "G96", "I21", "I23.1") ~ "Гипоксия",
`Main_diagnosis_code` %in% c("С71", "D33", "D32", "D43", "I72") ~ "Новообразование",
TRUE ~ "OTHER"
), `Main_diagnosis_code`) %>% filter(diseaseGroup == "OTHER") %>% unique()
# Классифицируем диагнозы по группам
data_e <- data_e %>% mutate(
diseaseGroup = case_when(
`Main_diagnosis_code` %in% c("I63", "I69.3", "I69.4", "T82.8", "I69.3;C34.1", "I63.5", "I63.3", "I63.2", "I63.4", "I63.9") ~ "Ischemic stroke",
`Main_diagnosis_code` %in% c("Q28", "I60", "I72", "I69.2", "I69.1", "I69.0", "I61", "I60.2", "I61.6", "I61.5", "I61.3", "I60.3", "I60.6", "I60.0") ~ "Hemorrhagic stroke",
`Main_diagnosis_code` %in% c("S06", "T94", "T90", "T90.4", "T94.0", "T94", "T90.1", "T90", "T90.2", "T90.5", "T90.8", "S06.6", "S06.31", "S06.2;T88.8", "T94.1") ~ "TBI",
`Main_diagnosis_code` %in% c("G93.4", "G93.1", "G94.3", "I46", "U07.1", "U09.9", "G96", "I21", "I23.1", "I46;G93.1", "I21.4", "G94.3;G82.4") ~ "Hypoxia",
`Main_diagnosis_code` %in% c("С71", "D33", "D32", "D43", "I72", "C71.2", "D33.3", "D33.1", "D33.0", "D43.0;G81.9", "D43.1", "D43.0", "D32.2", "D32.0", "C71.1", "I72.0", "I72.8") ~ "Tumor",
`Main_diagnosis_code` %in% c("I67.2", "I67.1") ~ "Ischemic stroke",
`Main_diagnosis_code` %in% c("I69.0", "I69.0;G91.0") ~ "Hemorrhagic stroke",
`Main_diagnosis_code` %in% c("T06.8", "T91.3", "T98.1", "T82.8") ~ "TBI",
`Main_diagnosis_code` %in% c("G93.1", "G82.4", "S15.0", "J17.1") ~ "Hypoxia",
`Main_diagnosis_code` %in% c("D35.3;G04.2", "D35.2", "C79.3", "C71.8", "C71.6", "C71") ~ "Tumor",
TRUE ~ NA
),
`Main_diagnosis_code`
)
data_e <- data_e %>% mutate(diseaseGroup = as.factor(diseaseGroup))
# Find ungroped diagnosis
data_e %>%
dplyr::select(`Main_diagnosis_code`, diseaseGroup) %>%
filter(is.na(diseaseGroup))  %>%  unique() %>% arrange(.desc=T)
data_e %>%
group_by(diseaseGroup) %>%
drop_na(diseaseGroup) %>%
summarise(count = n()) %>%
ggplot(aes(x = diseaseGroup, y = count)) +
geom_bar(stat="identity", col = 'black', fill = 'white', linewidth=1) +
geom_label(aes(label=count), col = 'black', size=10, label.size=1) +
scale_x_discrete('Disease group') +
scale_y_continuous('N patients') +
theme(
axis.text.x = element_text(size = 21, face = 'bold'),
axis.text.y = element_text(size = 23),
axis.title = element_text(size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
panel.background = element_rect(fill = "white", color = 'black'),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_line(color = "gray"),
panel.grid.minor = element_line(color = "lightgray"),
)
theme_cust <- theme(
axis.text.x = element_text(size = 16, face = 'bold'),
axis.text.y = element_text(size = 18),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
plot.title = element_text(hjust=0.5),
legend.text = element_text(size = 16),
panel.background = element_rect(fill = "white", color = 'black'),
plot.background = element_rect(fill = "white"),
#panel.grid.major = element_line(color = "gray90"),
#panel.grid.minor = element_line(color = "lightgray"),
strip.text = element_text(size = 16)
)
#SEX
ggplot(data_e %>% filter(!is.na(Sex))) +
geom_bar(aes(y = diseaseGroup))+
facet_wrap(~`Sex`, ncol = 1) +
scale_y_discrete('Disease group') +
scale_x_continuous('Number of patients') +
theme_light() +
theme_cust +
theme(legend.position = "bottom")
#AGE
data_e %>% dplyr::filter (!(is.na(diseaseGroup)))%>%
ggplot() +
geom_histogram (aes(`Age`, fill = diseaseGroup ), color = "grey80") +
facet_wrap(~diseaseGroup) +
scale_y_discrete('Disease group') +
scale_x_continuous('Age') +
theme_light() +
theme_base() +
theme_cust +
scale_fill_brewer(palette = "PiYG") +
labs(fill = "Disease group")+
theme(legend.position = "none") +
labs (title = ' Disease group vs Age')
library(RColorBrewer)
brewer.pal(n=5,'PiYG')
ggplot(data_e %>% filter(!is.na(Sex))) +
geom_pointrange(mapping = aes(y =  diseaseGroup , x = Age, fill = diseaseGroup ),
stat = "summary",
fun.min = function(z) {quantile(z,0.25)},
fun.max = function(z) {quantile(z,0.75)},
fun = median,
size = 1) +
facet_wrap(~`Sex`, ncol = 1) +
scale_y_discrete('Disease group') +
scale_x_continuous('Number of patients') +
theme_base() +
theme_cust +
scale_fill_brewer(palette = "Reds")
#PNEUMONIA
inf <- data_e %>% dplyr::select (ID, Pneumonia, Infection, `Sepsis/septic_shock`, diseaseGroup ) %>% pivot_longer(!c(ID, diseaseGroup)) %>% filter (!(is.na(diseaseGroup )))
ggplot(inf) +
geom_bar (aes(value, fill = name), position = "dodge") +
facet_wrap( ~diseaseGroup ) +
scale_y_continuous ('Number of patients') +
scale_fill_brewer(palette = "Paired") +
labs (title = 'Infection status vs Disease group') +
theme_base () +
theme_cust
#INFECTION AT TRANSFER
ggplot(data_e) +
geom_bar (aes(`Infection`)) +
facet_wrap(~diseaseGroup) +
scale_y_continuous('Number of patients') +
theme_light() +
theme_cust
#SOFA
ggplot(data_e) +
geom_bar (aes(`SOFA_1d`)) +
facet_wrap(~diseaseGroup) +
scale_x_discrete('SOFA 1 day score') +
scale_y_continuous('Number of patients') +
theme_light() +
theme_cust
plot(data_e$`SOFA_1d`)
# calculate quantiles for bed-days  categorization
`bed-days at FSCCRR` <- as.numeric(data_e$`FSCCRR_bed-days`)
hist (`bed-days at FSCCRR`,  col = "gray78", breaks = 15)
BD <- as.numeric(data_e$`FSCCRR_bed-days`)
res<-quantile(BD, probs = c(0,0.25,0.5,0.75,1), na.rm = T)
res
data_for_regres <- data_e %>% dplyr:: select (ID, Sex, Age, `anti-HCV`, `Hbs_AG`,  `LMCA`, Pneumonia, Infection, diseaseGroup, CGS, CCI_1d,`CIRS-G_sum_1d`, `CIRS-G_pathology_1d`, `CIRS-G_severity_1d`, FOUR_1d, SOFA_1d, `8ohdg_1d`, WBC_1d,  `NEU_#_1d`, `LYM_#_1d`,`PLT_1d`, `Lactate_1d`, Creatinine_1d, ALT_1d, AST_1d,  Albumin_1d, Alcaline_phosphatase_1d , Uric_acid_1d, Urea_1d, GGT_1d, Potassium_1d, Sodium_1d, Chloride_1d,  APTT_1d, INR_1d, Fibrinogen_1d, PT_1d, `Uroseptic_infection`, `Sepsis/septic_shock`, `Ventilation`, `Pneumonia_deterioration_d`, `Ventilation_d`, `ICU_FSCCRR_d`, `FSCCRR_bed-days`, `Outcome`, `Pneumonia_at_FSCCRR`, `oneday_log`, `8ohdg 1d log`, `NLR_1d`) %>%
mutate(across(c(CGS, CCI_1d ,`CIRS-G_sum_1d`, `CIRS-G_pathology_1d`,`CIRS-G_severity_1d`,`FOUR_1d`, `SOFA_1d`, `WBC_1d`, `NEU_#_1d`, `LYM_#_1d`, `PLT_1d`, `Lactate_1d`, `Creatinine_1d` , `ALT_1d`, `AST_1d`, `Albumin_1d`, `Alcaline_phosphatase_1d`, `Uric_acid_1d`, `Urea_1d` , `GGT_1d`, `Potassium_1d`, `Sodium_1d`, `Chloride_1d`, `APTT_1d`, `INR_1d`,`Fibrinogen_1d`, PT_1d , `Pneumonia_deterioration_d`, `Ventilation_d`, `ICU_FSCCRR_d`, `FSCCRR_bed-days`), as.numeric),
across(c(Outcome,`Ventilation`), factor)) %>%
# new variable - categorised `FSCCRR_bed-days` by quantiles
mutate (BD_group = case_when (`FSCCRR_bed-days` < 30 ~ "0-30",
30 <= `FSCCRR_bed-days` & `FSCCRR_bed-days` < 46 ~ "30-46",
46 <= `FSCCRR_bed-days` & `FSCCRR_bed-days` < 67 ~ "46-67",
67 < `FSCCRR_bed-days` ~ "67-401"))
# add corrected SNP data
hosp_poly_group_nlr  <- left_join(data_for_regres, hospital_polymorf_e[,1:11], by = "ID" ) %>%
dplyr::select (!ID) %>%
filter(!is.na(Ventilation))
#Achieve corrected  dataset with right names and correct variables types
#summary(hosp_poly_group_nlr)
#str(hosp_poly_group_nlr)
#colnames(hosp_poly_group_nlr)
hosp_poly_group_nlr %>% group_by(`BD_group`)  %>% tally ()
?hist
discharged <- hosp_poly_group_nlr %>% filter(Outcome == "0") %>%  dplyr::select (!c(Outcome, `Ventilation_d`)) %>%  filter(!is.na(Ventilation))
discharged  %>% dplyr::filter (!(is.na(diseaseGroup)))%>%
ggplot() +
geom_boxplot (aes(Ventilation, Age, fill = Ventilation), color = "grey8") +
facet_wrap(~diseaseGroup) +
scale_y_continuous('Age') +
# scale_x_continuous('Age') +
theme_light() +
theme_base() +
theme_cust +
scale_fill_manual (values = c("Yes"= "#e34a33","No"= "#addd8e")) +
labs(fill = "Disease group")+
theme(legend.position = "none") +
labs (title = 'Ventilation vs Disease group')
?scale_fill_discrete
library(factoextra)
library(FactoMineR)
library(ggbiplot)
#str(hosp_poly_group_nlr)
#check how many NA among chosen variables
na_count <-sapply(discharged, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
#delete variables with more than 60 NA's (more than 11%)
full_nums <- discharged %>% dplyr::select (!c(LMCA, `8ohdg_1d`,`Lactate_1d`,
`Alcaline_phosphatase_1d`, `Uric_acid_1d`, `GGT_1d`,
`Chloride_1d`, `Pneumonia_deterioration_d`, `8ohdg 1d log`,`FSCCRR_bed-days`)) %>%
dplyr::select (BD_group, Ventilation, diseaseGroup, where(is.numeric)) %>% drop_na()
# got a tibble:302 × 29
hospital.full.pca <- prcomp(full_nums[,-(1:3)],
scale = T) # scaling
summary(hospital.full.pca)
contr_1a <- fviz_contrib(hospital.full.pca, choice = "var", axes = 1)
contr_2a <- fviz_contrib(hospital.full.pca, choice = "var", axes = 2)
fviz_eig (hospital.full.pca, addlabels = T, ylim = c (0,50))
pca_graph <- fviz_pca_var(hospital.full.pca, col.var = "contrib", gradient.cols = c("blue", "orange", "red"),
legend.title = "Contrib", pointsize = 10, pointshape = 40,
labelsize = 5, repel = TRUE,  axes.linetype = "blank")
pca_graph
set.seed(123)
var_pca_full <- get_pca_var(hospital.full.pca)
res.km <- kmeans(var_pca_full$coord, centers = 3, nstart = 25)
grp <- as.factor(res.km$cluster)
# Color variables by groups
fviz_pca_var(hospital.full.pca, col.var = grp,
palette =  c("#00AFBB", "#E7B800", "#FC4E07"),
legend.title = "Cluster", pointsize = 10, pointshape = 40,
labelsize = 5, repel = TRUE,  axes.linetype = "blank")
biplot0 <- ggbiplot(hospital.full.pca,
scale=0, alpha = 0.3, ellipse = TRUE, groups = full_nums$Ventilation) +
labs(title = "PCA of yield contributing parameters")
biplot_BD <- ggbiplot(hospital.full.pca,
scale=0, alpha = 0.3, ellipse = TRUE, groups = full_nums$`BD_group`) +
labs(title = "PCA of yield contributing parameters")
# Get less predictors, additionally exclude lab test results (except NLR) and components of CIRS-G composit score
unlist(colnames (full_nums))
small_pca <- discharged  %>% dplyr::select (Ventilation, BD_group, diseaseGroup, Age, CGS, CCI_1d,  `CIRS-G_sum_1d`,
`FOUR_1d`, `NLR_1d`, `ICU_FSCCRR_d`) %>% drop_na()
hospital.pca <- prcomp(small_pca[,-(1:3)],
scale = T) # шкалирование нужно так как датафрейм подаем не шкалированный
summary(hospital.pca)
# birth.pca$rotation
# графическая визуализация доли объясненной изменчивости для каждой из компонент
fviz_eig (hospital.pca, addlabels = T, ylim = c (0,50))
contrib_1 <- fviz_contrib(hospital.pca, choice = "var", axes = 1, labelsize = 5,)
contrib_2 <- fviz_contrib(hospital.pca, choice = "var", axes = 2, labelsize = 5,) # axes - номер комоненты, из чего состоит каждая компонента?
contrib_1
contrib_2
pca_sm_graph <- fviz_pca_var(hospital.pca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
pointsize = 3, pointshape = 21,
labelsize = 5, repel = TRUE)
pca_sm_graph
var_pca <- get_pca_var(hospital.pca)
library("corrplot")
corrplot(var_pca$contrib, is.corr=FALSE)
biplot2 <- ggbiplot(hospital.pca,
scale=0, alpha = 0.3, ellipse = TRUE, groups = small_pca$Ventilation) +
labs(title = "PCA - Ventilation biplot") +
theme_base()
library (plotly)
hospital.pca <- prcomp(small_pca[,-(1:3)],
scale = , rank. = 3)
components <- hospital.pca[["x"]]
components <- data.frame(components)
components$PC2 <- -components$PC2
components$PC3 <- -components$PC3
components = cbind(components, small_pca$Ventilation)
#tot_explained_variance_ratio <- summary( hospital.pca)[["importance"]]['Proportion of Variance',]
#ot_explained_variance_ratio <- 100 * sum(tot_explained_variance_ratio)
tit = 'Total Explained Variance of components = 98'
fig <- plot_ly(components, x = ~PC1, y = ~PC2, z = ~PC3, color = ~small_pca$Ventilation, colors = c('#EF553B','#00CC96') ) %>%
add_markers(size = 12)
fig <- fig %>%
layout(
title = tit,
scene = list(bgcolor = "white")
)
fig
components1 = cbind(components1, small_pca$BD_group)
library (plotly)
hospital.pca <- prcomp(small_pca[,-(1:3)],
scale = T )
#summary(hospital.pca)
components1 <- hospital.pca[["x"]]
components1 <- data.frame(components1[,1:3])
components1$PC2 <- -components1$PC2
components1$PC3 <- -components1$PC3
components1 = cbind(components1, small_pca$Ventilation)
#tot_explained_variance_ratio <- summary( hospital.pca)[["importance"]]['Proportion of Variance',]
#tot_explained_variance_ratio <- 100 * sum(tot_explained_variance_ratio)
tit = 'Total Explained Variance of first k=3 (out of 7) components = 77%'
fig <- plot_ly(components1, x = ~PC1, y = ~PC2, z = ~PC3, color = ~small_pca$Ventilation, colors = c('#EF553B','#00CC96') ) %>%
add_markers(size = I(200))
fig <- fig %>%
layout(
title = tit,
scene = list(bgcolor = "white")
)
fig
components1 = cbind(components1, small_pca$BD_group)
#tot_explained_variance_ratio <- summary( hospital.pca)[["importance"]]['Proportion of Variance',]
#tot_explained_variance_ratio <- 100 * sum(tot_explained_variance_ratio)
tit = 'Total Explained Variance of first k=3 (out of 7) components = 77%'
fig <- plot_ly(components1, x = ~PC1, y = ~PC2, z = ~PC3, color = ~small_pca$BD_group, colors = c('#EF553B','#00CC96', '#636EFA', '#EEB422')) %>%
add_markers(size = I(200))
fig_BD <- fig %>%
layout(
title = tit,
scene = list(bgcolor = "white")
)
fig_BD
?plot_ly
components_d = cbind(components1, small_pca$diseaseGroup)
#tot_explained_variance_ratio <- summary( hospital.pca)[["importance"]]['Proportion of Variance',]
#tot_explained_variance_ratio <- 100 * sum(tot_explained_variance_ratio)
tit = 'Total Explained Variance of first k=3 (out of 7) components = 77%'
fig <- plot_ly(components_d, x = ~PC1, y = ~PC2, z = ~PC3, color = ~small_pca$diseaseGroup, colors = c('#EF553B','#00CC96', '#636EFA', '#EEB422')) %>%
add_markers(size = I(200))
fig_dis <- fig %>%
layout(
title = tit,
scene = list(bgcolor = "white")
)
fig_dis
biplot_BD_sm <- ggbiplot(hospital.pca,
scale=0, alpha = 0.3, ellipse = TRUE, groups = small_pca$`BD_group`) +
labs(title = "PCA of yield contributing parameters") +
labs(title = "PCA - Duration stay biplot") +
theme_base()
